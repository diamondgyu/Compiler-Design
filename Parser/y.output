Terminals unused in grammar

    ENDFILE
    ERROR


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | func_declaration

    6 id: ID

    7 num: NUM

    8 var_declaration: type_specifier id SEMI
    9                | type_specifier id LBRACE num RBRACE SEMI

   10 type_specifier: INT
   11               | VOID
   12               | INTARRAY
   13               | VOIDARRAY

   14 @1: ε

   15 func_declaration: type_specifier id @1 LPAREN params RPAREN compound_stmt

   16 params: param_list
   17       | VOID

   18 param_list: param_list COMMA param
   19           | param

   20 param: type_specifier id
   21      | type_specifier id LBRACE RBRACE

   22 compound_stmt: LCURLY local_declarations statement_list RCURLY

   23 local_declarations: local_declarations var_declaration
   24                   | ε

   25 statement_list: statement_list statement
   26               | ε

   27 statement: expression_stmt
   28          | compound_stmt
   29          | selection_stmt
   30          | iteration_stmt
   31          | return_stmt

   32 expression_stmt: expression SEMI
   33                | SEMI

   34 return_stmt: RETURN SEMI
   35            | RETURN expression SEMI

   36 expression: var ASSIGN expression
   37           | simple_expression

   38 var: id

   39 @2: ε

   40 var: id LBRACE @2 expression RBRACE

   41 simple_expression: additive_expression relop additive_expression
   42                  | additive_expression

   43 relop: LE
   44      | LT
   45      | GT
   46      | GE
   47      | NE
   48      | EQ

   49 @3: ε

   50 additive_expression: additive_expression addop @3 term
   51                    | term

   52 addop: PLUS
   53      | MINUS

   54 @4: ε

   55 term: term mulop @4 factor
   56     | factor

   57 mulop: TIMES
   58      | OVER

   59 factor: LPAREN expression RPAREN
   60       | var
   61       | call
   62       | num

   63 @5: ε

   64 call: id @5 LPAREN args RPAREN

   65 args: arg_list
   66     | ε

   67 arg_list: arg_list COMMA expression
   68         | expression

   69 selection_stmt: IF LPAREN expression RPAREN statement
   70               | IF LPAREN expression RPAREN statement ELSE statement

   71 iteration_stmt: WHILE LPAREN expression RPAREN statement


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 69 70
    WHILE (259) 71
    RETURN (260) 34 35
    INT (261) 10
    VOID (262) 11 17
    INTARRAY (263) 12
    VOIDARRAY (264) 13
    NUM (265) 7
    ID (266) 6
    ENDFILE (267)
    ERROR (268)
    EQ (269) 48
    NE (270) 47
    LT (271) 44
    LE (272) 43
    GT (273) 45
    GE (274) 46
    LPAREN (275) 15 59 64 69 70 71
    RPAREN (276) 15 59 64 69 70 71
    LBRACE (277) 9 21 40
    RBRACE (278) 9 21 40
    LCURLY (279) 22
    RCURLY (280) 22
    SEMI (281) 8 9 32 33 34 35
    COMMA (282) 18 67
    IFONLY (283)
    PARAMONLY (284)
    ELSE (285) 70
    PLUS (286) 52
    MINUS (287) 53
    TIMES (288) 57
    OVER (289) 58
    ASSIGN (290) 36


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program (37)
        on left: 1
        on right: 0
    declaration_list (38)
        on left: 2 3
        on right: 1 2
    declaration (39)
        on left: 4 5
        on right: 2 3
    id (40)
        on left: 6
        on right: 8 9 15 20 21 38 40 64
    num (41)
        on left: 7
        on right: 9 62
    var_declaration (42)
        on left: 8 9
        on right: 4 23
    type_specifier (43)
        on left: 10 11 12 13
        on right: 8 9 15 20 21
    func_declaration (44)
        on left: 15
        on right: 5
    @1 (45)
        on left: 14
        on right: 15
    params (46)
        on left: 16 17
        on right: 15
    param_list (47)
        on left: 18 19
        on right: 16 18
    param (48)
        on left: 20 21
        on right: 18 19
    compound_stmt (49)
        on left: 22
        on right: 15 28
    local_declarations (50)
        on left: 23 24
        on right: 22 23
    statement_list (51)
        on left: 25 26
        on right: 22 25
    statement (52)
        on left: 27 28 29 30 31
        on right: 25 69 70 71
    expression_stmt (53)
        on left: 32 33
        on right: 27
    return_stmt (54)
        on left: 34 35
        on right: 31
    expression (55)
        on left: 36 37
        on right: 32 35 36 40 59 67 68 69 70 71
    var (56)
        on left: 38 40
        on right: 36 60
    @2 (57)
        on left: 39
        on right: 40
    simple_expression (58)
        on left: 41 42
        on right: 37
    relop (59)
        on left: 43 44 45 46 47 48
        on right: 41
    additive_expression (60)
        on left: 50 51
        on right: 41 42 50
    @3 (61)
        on left: 49
        on right: 50
    addop (62)
        on left: 52 53
        on right: 50
    term (63)
        on left: 55 56
        on right: 50 51 55
    @4 (64)
        on left: 54
        on right: 55
    mulop (65)
        on left: 57 58
        on right: 55
    factor (66)
        on left: 59 60 61 62
        on right: 55 56
    call (67)
        on left: 64
        on right: 61
    @5 (68)
        on left: 63
        on right: 64
    args (69)
        on left: 65 66
        on right: 64
    arg_list (70)
        on left: 67 68
        on right: 65 67
    selection_stmt (71)
        on left: 69 70
        on right: 29
    iteration_stmt (72)
        on left: 71
        on right: 30


State 0

    0 $accept: • program $end

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    INTARRAY   shift, and go to state 3
    VOIDARRAY  shift, and go to state 4

    program           go to state 5
    declaration_list  go to state 6
    declaration       go to state 7
    var_declaration   go to state 8
    type_specifier    go to state 9
    func_declaration  go to state 10


State 1

   10 type_specifier: INT •

    $default  reduce using rule 10 (type_specifier)


State 2

   11 type_specifier: VOID •

    $default  reduce using rule 11 (type_specifier)


State 3

   12 type_specifier: INTARRAY •

    $default  reduce using rule 12 (type_specifier)


State 4

   13 type_specifier: VOIDARRAY •

    $default  reduce using rule 13 (type_specifier)


State 5

    0 $accept: program • $end

    $end  shift, and go to state 11


State 6

    1 program: declaration_list •
    2 declaration_list: declaration_list • declaration

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    INTARRAY   shift, and go to state 3
    VOIDARRAY  shift, and go to state 4

    $default  reduce using rule 1 (program)

    declaration       go to state 12
    var_declaration   go to state 8
    type_specifier    go to state 9
    func_declaration  go to state 10


State 7

    3 declaration_list: declaration •

    $default  reduce using rule 3 (declaration_list)


State 8

    4 declaration: var_declaration •

    $default  reduce using rule 4 (declaration)


State 9

    8 var_declaration: type_specifier • id SEMI
    9                | type_specifier • id LBRACE num RBRACE SEMI
   15 func_declaration: type_specifier • id @1 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 13

    id  go to state 14


State 10

    5 declaration: func_declaration •

    $default  reduce using rule 5 (declaration)


State 11

    0 $accept: program $end •

    $default  accept


State 12

    2 declaration_list: declaration_list declaration •

    $default  reduce using rule 2 (declaration_list)


State 13

    6 id: ID •

    $default  reduce using rule 6 (id)


State 14

    8 var_declaration: type_specifier id • SEMI
    9                | type_specifier id • LBRACE num RBRACE SEMI
   15 func_declaration: type_specifier id • @1 LPAREN params RPAREN compound_stmt

    LBRACE  shift, and go to state 15
    SEMI    shift, and go to state 16

    $default  reduce using rule 14 (@1)

    @1  go to state 17


State 15

    9 var_declaration: type_specifier id LBRACE • num RBRACE SEMI

    NUM  shift, and go to state 18

    num  go to state 19


State 16

    8 var_declaration: type_specifier id SEMI •

    $default  reduce using rule 8 (var_declaration)


State 17

   15 func_declaration: type_specifier id @1 • LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 20


State 18

    7 num: NUM •

    $default  reduce using rule 7 (num)


State 19

    9 var_declaration: type_specifier id LBRACE num • RBRACE SEMI

    RBRACE  shift, and go to state 21


State 20

   15 func_declaration: type_specifier id @1 LPAREN • params RPAREN compound_stmt

    INT        shift, and go to state 1
    VOID       shift, and go to state 22
    INTARRAY   shift, and go to state 3
    VOIDARRAY  shift, and go to state 4

    type_specifier  go to state 23
    params          go to state 24
    param_list      go to state 25
    param           go to state 26


State 21

    9 var_declaration: type_specifier id LBRACE num RBRACE • SEMI

    SEMI  shift, and go to state 27


State 22

   11 type_specifier: VOID •
   17 params: VOID •

    RPAREN    reduce using rule 17 (params)
    $default  reduce using rule 11 (type_specifier)


State 23

   20 param: type_specifier • id
   21      | type_specifier • id LBRACE RBRACE

    ID  shift, and go to state 13

    id  go to state 28


State 24

   15 func_declaration: type_specifier id @1 LPAREN params • RPAREN compound_stmt

    RPAREN  shift, and go to state 29


State 25

   16 params: param_list •
   18 param_list: param_list • COMMA param

    COMMA  shift, and go to state 30

    $default  reduce using rule 16 (params)


State 26

   19 param_list: param •

    $default  reduce using rule 19 (param_list)


State 27

    9 var_declaration: type_specifier id LBRACE num RBRACE SEMI •

    $default  reduce using rule 9 (var_declaration)


State 28

   20 param: type_specifier id •
   21      | type_specifier id • LBRACE RBRACE

    LBRACE  shift, and go to state 31

    $default  reduce using rule 20 (param)


State 29

   15 func_declaration: type_specifier id @1 LPAREN params RPAREN • compound_stmt

    LCURLY  shift, and go to state 32

    compound_stmt  go to state 33


State 30

   18 param_list: param_list COMMA • param

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    INTARRAY   shift, and go to state 3
    VOIDARRAY  shift, and go to state 4

    type_specifier  go to state 23
    param           go to state 34


State 31

   21 param: type_specifier id LBRACE • RBRACE

    RBRACE  shift, and go to state 35


State 32

   22 compound_stmt: LCURLY • local_declarations statement_list RCURLY

    $default  reduce using rule 24 (local_declarations)

    local_declarations  go to state 36


State 33

   15 func_declaration: type_specifier id @1 LPAREN params RPAREN compound_stmt •

    $default  reduce using rule 15 (func_declaration)


State 34

   18 param_list: param_list COMMA param •

    $default  reduce using rule 18 (param_list)


State 35

   21 param: type_specifier id LBRACE RBRACE •

    $default  reduce using rule 21 (param)


State 36

   22 compound_stmt: LCURLY local_declarations • statement_list RCURLY
   23 local_declarations: local_declarations • var_declaration

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    INTARRAY   shift, and go to state 3
    VOIDARRAY  shift, and go to state 4

    $default  reduce using rule 26 (statement_list)

    var_declaration  go to state 37
    type_specifier   go to state 38
    statement_list   go to state 39


State 37

   23 local_declarations: local_declarations var_declaration •

    $default  reduce using rule 23 (local_declarations)


State 38

    8 var_declaration: type_specifier • id SEMI
    9                | type_specifier • id LBRACE num RBRACE SEMI

    ID  shift, and go to state 13

    id  go to state 40


State 39

   22 compound_stmt: LCURLY local_declarations statement_list • RCURLY
   25 statement_list: statement_list • statement

    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43
    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44
    LCURLY  shift, and go to state 32
    RCURLY  shift, and go to state 45
    SEMI    shift, and go to state 46

    id                   go to state 47
    num                  go to state 48
    compound_stmt        go to state 49
    statement            go to state 50
    expression_stmt      go to state 51
    return_stmt          go to state 52
    expression           go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    selection_stmt       go to state 60
    iteration_stmt       go to state 61


State 40

    8 var_declaration: type_specifier id • SEMI
    9                | type_specifier id • LBRACE num RBRACE SEMI

    LBRACE  shift, and go to state 15
    SEMI    shift, and go to state 16


State 41

   69 selection_stmt: IF • LPAREN expression RPAREN statement
   70               | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 62


State 42

   71 iteration_stmt: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 63


State 43

   34 return_stmt: RETURN • SEMI
   35            | RETURN • expression SEMI

    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44
    SEMI    shift, and go to state 64

    id                   go to state 47
    num                  go to state 48
    expression           go to state 65
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 44

   59 factor: LPAREN • expression RPAREN

    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44

    id                   go to state 47
    num                  go to state 48
    expression           go to state 66
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 45

   22 compound_stmt: LCURLY local_declarations statement_list RCURLY •

    $default  reduce using rule 22 (compound_stmt)


State 46

   33 expression_stmt: SEMI •

    $default  reduce using rule 33 (expression_stmt)


State 47

   38 var: id •
   40    | id • LBRACE @2 expression RBRACE
   64 call: id • @5 LPAREN args RPAREN

    LBRACE  shift, and go to state 67

    LPAREN    reduce using rule 63 (@5)
    $default  reduce using rule 38 (var)

    @5  go to state 68


State 48

   62 factor: num •

    $default  reduce using rule 62 (factor)


State 49

   28 statement: compound_stmt •

    $default  reduce using rule 28 (statement)


State 50

   25 statement_list: statement_list statement •

    $default  reduce using rule 25 (statement_list)


State 51

   27 statement: expression_stmt •

    $default  reduce using rule 27 (statement)


State 52

   31 statement: return_stmt •

    $default  reduce using rule 31 (statement)


State 53

   32 expression_stmt: expression • SEMI

    SEMI  shift, and go to state 69


State 54

   36 expression: var • ASSIGN expression
   60 factor: var •

    ASSIGN  shift, and go to state 70

    $default  reduce using rule 60 (factor)


State 55

   37 expression: simple_expression •

    $default  reduce using rule 37 (expression)


State 56

   41 simple_expression: additive_expression • relop additive_expression
   42                  | additive_expression •
   50 additive_expression: additive_expression • addop @3 term

    EQ     shift, and go to state 71
    NE     shift, and go to state 72
    LT     shift, and go to state 73
    LE     shift, and go to state 74
    GT     shift, and go to state 75
    GE     shift, and go to state 76
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 42 (simple_expression)

    relop  go to state 79
    addop  go to state 80


State 57

   51 additive_expression: term •
   55 term: term • mulop @4 factor

    TIMES  shift, and go to state 81
    OVER   shift, and go to state 82

    $default  reduce using rule 51 (additive_expression)

    mulop  go to state 83


State 58

   56 term: factor •

    $default  reduce using rule 56 (term)


State 59

   61 factor: call •

    $default  reduce using rule 61 (factor)


State 60

   29 statement: selection_stmt •

    $default  reduce using rule 29 (statement)


State 61

   30 statement: iteration_stmt •

    $default  reduce using rule 30 (statement)


State 62

   69 selection_stmt: IF LPAREN • expression RPAREN statement
   70               | IF LPAREN • expression RPAREN statement ELSE statement

    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44

    id                   go to state 47
    num                  go to state 48
    expression           go to state 84
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 63

   71 iteration_stmt: WHILE LPAREN • expression RPAREN statement

    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44

    id                   go to state 47
    num                  go to state 48
    expression           go to state 85
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 64

   34 return_stmt: RETURN SEMI •

    $default  reduce using rule 34 (return_stmt)


State 65

   35 return_stmt: RETURN expression • SEMI

    SEMI  shift, and go to state 86


State 66

   59 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 87


State 67

   40 var: id LBRACE • @2 expression RBRACE

    $default  reduce using rule 39 (@2)

    @2  go to state 88


State 68

   64 call: id @5 • LPAREN args RPAREN

    LPAREN  shift, and go to state 89


State 69

   32 expression_stmt: expression SEMI •

    $default  reduce using rule 32 (expression_stmt)


State 70

   36 expression: var ASSIGN • expression

    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44

    id                   go to state 47
    num                  go to state 48
    expression           go to state 90
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 71

   48 relop: EQ •

    $default  reduce using rule 48 (relop)


State 72

   47 relop: NE •

    $default  reduce using rule 47 (relop)


State 73

   44 relop: LT •

    $default  reduce using rule 44 (relop)


State 74

   43 relop: LE •

    $default  reduce using rule 43 (relop)


State 75

   45 relop: GT •

    $default  reduce using rule 45 (relop)


State 76

   46 relop: GE •

    $default  reduce using rule 46 (relop)


State 77

   52 addop: PLUS •

    $default  reduce using rule 52 (addop)


State 78

   53 addop: MINUS •

    $default  reduce using rule 53 (addop)


State 79

   41 simple_expression: additive_expression relop • additive_expression

    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44

    id                   go to state 47
    num                  go to state 48
    var                  go to state 91
    additive_expression  go to state 92
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 80

   50 additive_expression: additive_expression addop • @3 term

    $default  reduce using rule 49 (@3)

    @3  go to state 93


State 81

   57 mulop: TIMES •

    $default  reduce using rule 57 (mulop)


State 82

   58 mulop: OVER •

    $default  reduce using rule 58 (mulop)


State 83

   55 term: term mulop • @4 factor

    $default  reduce using rule 54 (@4)

    @4  go to state 94


State 84

   69 selection_stmt: IF LPAREN expression • RPAREN statement
   70               | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 95


State 85

   71 iteration_stmt: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 96


State 86

   35 return_stmt: RETURN expression SEMI •

    $default  reduce using rule 35 (return_stmt)


State 87

   59 factor: LPAREN expression RPAREN •

    $default  reduce using rule 59 (factor)


State 88

   40 var: id LBRACE @2 • expression RBRACE

    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44

    id                   go to state 47
    num                  go to state 48
    expression           go to state 97
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 89

   64 call: id @5 LPAREN • args RPAREN

    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44

    $default  reduce using rule 66 (args)

    id                   go to state 47
    num                  go to state 48
    expression           go to state 98
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    args                 go to state 99
    arg_list             go to state 100


State 90

   36 expression: var ASSIGN expression •

    $default  reduce using rule 36 (expression)


State 91

   60 factor: var •

    $default  reduce using rule 60 (factor)


State 92

   41 simple_expression: additive_expression relop additive_expression •
   50 additive_expression: additive_expression • addop @3 term

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78

    $default  reduce using rule 41 (simple_expression)

    addop  go to state 80


State 93

   50 additive_expression: additive_expression addop @3 • term

    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44

    id      go to state 47
    num     go to state 48
    var     go to state 91
    term    go to state 101
    factor  go to state 58
    call    go to state 59


State 94

   55 term: term mulop @4 • factor

    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44

    id      go to state 47
    num     go to state 48
    var     go to state 91
    factor  go to state 102
    call    go to state 59


State 95

   69 selection_stmt: IF LPAREN expression RPAREN • statement
   70               | IF LPAREN expression RPAREN • statement ELSE statement

    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43
    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44
    LCURLY  shift, and go to state 32
    SEMI    shift, and go to state 46

    id                   go to state 47
    num                  go to state 48
    compound_stmt        go to state 49
    statement            go to state 103
    expression_stmt      go to state 51
    return_stmt          go to state 52
    expression           go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    selection_stmt       go to state 60
    iteration_stmt       go to state 61


State 96

   71 iteration_stmt: WHILE LPAREN expression RPAREN • statement

    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43
    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44
    LCURLY  shift, and go to state 32
    SEMI    shift, and go to state 46

    id                   go to state 47
    num                  go to state 48
    compound_stmt        go to state 49
    statement            go to state 104
    expression_stmt      go to state 51
    return_stmt          go to state 52
    expression           go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    selection_stmt       go to state 60
    iteration_stmt       go to state 61


State 97

   40 var: id LBRACE @2 expression • RBRACE

    RBRACE  shift, and go to state 105


State 98

   68 arg_list: expression •

    $default  reduce using rule 68 (arg_list)


State 99

   64 call: id @5 LPAREN args • RPAREN

    RPAREN  shift, and go to state 106


State 100

   65 args: arg_list •
   67 arg_list: arg_list • COMMA expression

    COMMA  shift, and go to state 107

    $default  reduce using rule 65 (args)


State 101

   50 additive_expression: additive_expression addop @3 term •
   55 term: term • mulop @4 factor

    TIMES  shift, and go to state 81
    OVER   shift, and go to state 82

    $default  reduce using rule 50 (additive_expression)

    mulop  go to state 83


State 102

   55 term: term mulop @4 factor •

    $default  reduce using rule 55 (term)


State 103

   69 selection_stmt: IF LPAREN expression RPAREN statement •
   70               | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 108

    $default  reduce using rule 69 (selection_stmt)


State 104

   71 iteration_stmt: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 71 (iteration_stmt)


State 105

   40 var: id LBRACE @2 expression RBRACE •

    $default  reduce using rule 40 (var)


State 106

   64 call: id @5 LPAREN args RPAREN •

    $default  reduce using rule 64 (call)


State 107

   67 arg_list: arg_list COMMA • expression

    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44

    id                   go to state 47
    num                  go to state 48
    expression           go to state 109
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


State 108

   70 selection_stmt: IF LPAREN expression RPAREN statement ELSE • statement

    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43
    NUM     shift, and go to state 18
    ID      shift, and go to state 13
    LPAREN  shift, and go to state 44
    LCURLY  shift, and go to state 32
    SEMI    shift, and go to state 46

    id                   go to state 47
    num                  go to state 48
    compound_stmt        go to state 49
    statement            go to state 110
    expression_stmt      go to state 51
    return_stmt          go to state 52
    expression           go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    selection_stmt       go to state 60
    iteration_stmt       go to state 61


State 109

   67 arg_list: arg_list COMMA expression •

    $default  reduce using rule 67 (arg_list)


State 110

   70 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 70 (selection_stmt)

Terminals unused in grammar

    IF
    ELSE
    WHILE
    RETURN
    ENDFILE
    ERROR
    ASSIGN
    EQ
    NE
    LT
    LE
    GT
    GE
    LPAREN
    RPAREN
    LCURLY
    RCURLY
    COMMA
    PLUS
    MINUS
    TIMES
    OVER


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration

    5 var_declaration: type_specifier ID SEMI
    6                | type_specifier ID LBRACE NUM RBRACE SEMI

    7 type_specifier: INT
    8               | VOID
    9               | INTARRAY
   10               | VOIDARRAY


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258)
    ELSE (259)
    WHILE (260)
    RETURN (261)
    INT (262) 7
    VOID (263) 8
    INTARRAY (264) 9
    VOIDARRAY (265) 10
    NUM (266) 6
    ID (267) 5 6
    ENDFILE (268)
    ERROR (269)
    ASSIGN (270)
    EQ (271)
    NE (272)
    LT (273)
    LE (274)
    GT (275)
    GE (276)
    LPAREN (277)
    RPAREN (278)
    LBRACE (279) 6
    RBRACE (280) 6
    LCURLY (281)
    RCURLY (282)
    SEMI (283) 5 6
    COMMA (284)
    PLUS (285)
    MINUS (286)
    TIMES (287)
    OVER (288)


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    program (35)
        on left: 1
        on right: 0
    declaration_list (36)
        on left: 2 3
        on right: 1 2
    declaration (37)
        on left: 4
        on right: 2 3
    var_declaration (38)
        on left: 5 6
        on right: 4
    type_specifier (39)
        on left: 7 8 9 10
        on right: 5 6


State 0

    0 $accept: • program $end

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    INTARRAY   shift, and go to state 3
    VOIDARRAY  shift, and go to state 4

    program           go to state 5
    declaration_list  go to state 6
    declaration       go to state 7
    var_declaration   go to state 8
    type_specifier    go to state 9


State 1

    7 type_specifier: INT •

    $default  reduce using rule 7 (type_specifier)


State 2

    8 type_specifier: VOID •

    $default  reduce using rule 8 (type_specifier)


State 3

    9 type_specifier: INTARRAY •

    $default  reduce using rule 9 (type_specifier)


State 4

   10 type_specifier: VOIDARRAY •

    $default  reduce using rule 10 (type_specifier)


State 5

    0 $accept: program • $end

    $end  shift, and go to state 10


State 6

    1 program: declaration_list •
    2 declaration_list: declaration_list • declaration

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    INTARRAY   shift, and go to state 3
    VOIDARRAY  shift, and go to state 4

    $default  reduce using rule 1 (program)

    declaration      go to state 11
    var_declaration  go to state 8
    type_specifier   go to state 9


State 7

    3 declaration_list: declaration •

    $default  reduce using rule 3 (declaration_list)


State 8

    4 declaration: var_declaration •

    $default  reduce using rule 4 (declaration)


State 9

    5 var_declaration: type_specifier • ID SEMI
    6                | type_specifier • ID LBRACE NUM RBRACE SEMI

    ID  shift, and go to state 12


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 declaration_list: declaration_list declaration •

    $default  reduce using rule 2 (declaration_list)


State 12

    5 var_declaration: type_specifier ID • SEMI
    6                | type_specifier ID • LBRACE NUM RBRACE SEMI

    LBRACE  shift, and go to state 13
    SEMI    shift, and go to state 14


State 13

    6 var_declaration: type_specifier ID LBRACE • NUM RBRACE SEMI

    NUM  shift, and go to state 15


State 14

    5 var_declaration: type_specifier ID SEMI •

    $default  reduce using rule 5 (var_declaration)


State 15

    6 var_declaration: type_specifier ID LBRACE NUM • RBRACE SEMI

    RBRACE  shift, and go to state 16


State 16

    6 var_declaration: type_specifier ID LBRACE NUM RBRACE • SEMI

    SEMI  shift, and go to state 17


State 17

    6 var_declaration: type_specifier ID LBRACE NUM RBRACE SEMI •

    $default  reduce using rule 6 (var_declaration)

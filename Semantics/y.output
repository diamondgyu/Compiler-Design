Terminals unused in grammar

    INTARRAY
    VOIDARRAY
    ENDFILE
    ERROR


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | func_declaration

    6 id: ID

    7 num: NUM

    8 var_declaration: type_specifier id SEMI
    9                | type_specifier id LBRACE num RBRACE SEMI

   10 type_specifier: INT
   11               | VOID

   12 @1: ε

   13 func_declaration: type_specifier id @1 LPAREN params RPAREN compound_stmt

   14 params: param_list
   15       | VOID

   16 param_list: param_list COMMA param
   17           | param

   18 param: type_specifier id
   19      | type_specifier id LBRACE RBRACE

   20 compound_stmt: LCURLY local_declarations statement_list RCURLY

   21 local_declarations: local_declarations var_declaration
   22                   | ε

   23 statement_list: statement_list statement
   24               | ε

   25 statement: expression_stmt
   26          | compound_stmt
   27          | selection_stmt
   28          | iteration_stmt
   29          | return_stmt

   30 expression_stmt: expression SEMI
   31                | SEMI

   32 return_stmt: RETURN SEMI
   33            | RETURN expression SEMI

   34 expression: var ASSIGN expression
   35           | simple_expression

   36 var: id

   37 @2: ε

   38 var: id LBRACE @2 expression RBRACE

   39 simple_expression: additive_expression relop additive_expression
   40                  | additive_expression

   41 relop: LE
   42      | LT
   43      | GT
   44      | GE
   45      | NE
   46      | EQ

   47 @3: ε

   48 additive_expression: additive_expression addop @3 term
   49                    | term

   50 addop: PLUS
   51      | MINUS

   52 @4: ε

   53 term: term mulop @4 factor
   54     | factor

   55 mulop: TIMES
   56      | OVER

   57 factor: LPAREN expression RPAREN
   58       | var
   59       | call
   60       | num

   61 @5: ε

   62 call: id @5 LPAREN args RPAREN

   63 args: arg_list
   64     | ε

   65 arg_list: arg_list COMMA expression
   66         | expression

   67 selection_stmt: IF LPAREN expression RPAREN statement
   68               | IF LPAREN expression RPAREN statement ELSE statement

   69 iteration_stmt: WHILE LPAREN expression RPAREN statement


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 67 68
    WHILE (259) 69
    RETURN (260) 32 33
    INT (261) 10
    VOID (262) 11 15
    INTARRAY (263)
    VOIDARRAY (264)
    NUM (265) 7
    ID (266) 6
    ENDFILE (267)
    ERROR (268)
    EQ (269) 46
    NE (270) 45
    LT (271) 42
    LE (272) 41
    GT (273) 43
    GE (274) 44
    LPAREN (275) 13 57 62 67 68 69
    RPAREN (276) 13 57 62 67 68 69
    LBRACE (277) 9 19 38
    RBRACE (278) 9 19 38
    LCURLY (279) 20
    RCURLY (280) 20
    SEMI (281) 8 9 30 31 32 33
    COMMA (282) 16 65
    IFONLY (283)
    PARAMONLY (284)
    ELSE (285) 68
    PLUS (286) 50
    MINUS (287) 51
    TIMES (288) 55
    OVER (289) 56
    ASSIGN (290) 34


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program (37)
        on left: 1
        on right: 0
    declaration_list (38)
        on left: 2 3
        on right: 1 2
    declaration (39)
        on left: 4 5
        on right: 2 3
    id (40)
        on left: 6
        on right: 8 9 13 18 19 36 38 62
    num (41)
        on left: 7
        on right: 9 60
    var_declaration (42)
        on left: 8 9
        on right: 4 21
    type_specifier (43)
        on left: 10 11
        on right: 8 9 13 18 19
    func_declaration (44)
        on left: 13
        on right: 5
    @1 (45)
        on left: 12
        on right: 13
    params (46)
        on left: 14 15
        on right: 13
    param_list (47)
        on left: 16 17
        on right: 14 16
    param (48)
        on left: 18 19
        on right: 16 17
    compound_stmt (49)
        on left: 20
        on right: 13 26
    local_declarations (50)
        on left: 21 22
        on right: 20 21
    statement_list (51)
        on left: 23 24
        on right: 20 23
    statement (52)
        on left: 25 26 27 28 29
        on right: 23 67 68 69
    expression_stmt (53)
        on left: 30 31
        on right: 25
    return_stmt (54)
        on left: 32 33
        on right: 29
    expression (55)
        on left: 34 35
        on right: 30 33 34 38 57 65 66 67 68 69
    var (56)
        on left: 36 38
        on right: 34 58
    @2 (57)
        on left: 37
        on right: 38
    simple_expression (58)
        on left: 39 40
        on right: 35
    relop (59)
        on left: 41 42 43 44 45 46
        on right: 39
    additive_expression (60)
        on left: 48 49
        on right: 39 40 48
    @3 (61)
        on left: 47
        on right: 48
    addop (62)
        on left: 50 51
        on right: 48
    term (63)
        on left: 53 54
        on right: 48 49 53
    @4 (64)
        on left: 52
        on right: 53
    mulop (65)
        on left: 55 56
        on right: 53
    factor (66)
        on left: 57 58 59 60
        on right: 53 54
    call (67)
        on left: 62
        on right: 59
    @5 (68)
        on left: 61
        on right: 62
    args (69)
        on left: 63 64
        on right: 62
    arg_list (70)
        on left: 65 66
        on right: 63 65
    selection_stmt (71)
        on left: 67 68
        on right: 27
    iteration_stmt (72)
        on left: 69
        on right: 28


State 0

    0 $accept: • program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    func_declaration  go to state 8


State 1

   10 type_specifier: INT •

    $default  reduce using rule 10 (type_specifier)


State 2

   11 type_specifier: VOID •

    $default  reduce using rule 11 (type_specifier)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list •
    2 declaration_list: declaration_list • declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration       go to state 10
    var_declaration   go to state 6
    type_specifier    go to state 7
    func_declaration  go to state 8


State 5

    3 declaration_list: declaration •

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration •

    $default  reduce using rule 4 (declaration)


State 7

    8 var_declaration: type_specifier • id SEMI
    9                | type_specifier • id LBRACE num RBRACE SEMI
   13 func_declaration: type_specifier • id @1 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11

    id  go to state 12


State 8

    5 declaration: func_declaration •

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 declaration_list: declaration_list declaration •

    $default  reduce using rule 2 (declaration_list)


State 11

    6 id: ID •

    $default  reduce using rule 6 (id)


State 12

    8 var_declaration: type_specifier id • SEMI
    9                | type_specifier id • LBRACE num RBRACE SEMI
   13 func_declaration: type_specifier id • @1 LPAREN params RPAREN compound_stmt

    LBRACE  shift, and go to state 13
    SEMI    shift, and go to state 14

    $default  reduce using rule 12 (@1)

    @1  go to state 15


State 13

    9 var_declaration: type_specifier id LBRACE • num RBRACE SEMI

    NUM  shift, and go to state 16

    num  go to state 17


State 14

    8 var_declaration: type_specifier id SEMI •

    $default  reduce using rule 8 (var_declaration)


State 15

   13 func_declaration: type_specifier id @1 • LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 18


State 16

    7 num: NUM •

    $default  reduce using rule 7 (num)


State 17

    9 var_declaration: type_specifier id LBRACE num • RBRACE SEMI

    RBRACE  shift, and go to state 19


State 18

   13 func_declaration: type_specifier id @1 LPAREN • params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 20

    type_specifier  go to state 21
    params          go to state 22
    param_list      go to state 23
    param           go to state 24


State 19

    9 var_declaration: type_specifier id LBRACE num RBRACE • SEMI

    SEMI  shift, and go to state 25


State 20

   11 type_specifier: VOID •
   15 params: VOID •

    RPAREN    reduce using rule 15 (params)
    $default  reduce using rule 11 (type_specifier)


State 21

   18 param: type_specifier • id
   19      | type_specifier • id LBRACE RBRACE

    ID  shift, and go to state 11

    id  go to state 26


State 22

   13 func_declaration: type_specifier id @1 LPAREN params • RPAREN compound_stmt

    RPAREN  shift, and go to state 27


State 23

   14 params: param_list •
   16 param_list: param_list • COMMA param

    COMMA  shift, and go to state 28

    $default  reduce using rule 14 (params)


State 24

   17 param_list: param •

    $default  reduce using rule 17 (param_list)


State 25

    9 var_declaration: type_specifier id LBRACE num RBRACE SEMI •

    $default  reduce using rule 9 (var_declaration)


State 26

   18 param: type_specifier id •
   19      | type_specifier id • LBRACE RBRACE

    LBRACE  shift, and go to state 29

    $default  reduce using rule 18 (param)


State 27

   13 func_declaration: type_specifier id @1 LPAREN params RPAREN • compound_stmt

    LCURLY  shift, and go to state 30

    compound_stmt  go to state 31


State 28

   16 param_list: param_list COMMA • param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 21
    param           go to state 32


State 29

   19 param: type_specifier id LBRACE • RBRACE

    RBRACE  shift, and go to state 33


State 30

   20 compound_stmt: LCURLY • local_declarations statement_list RCURLY

    $default  reduce using rule 22 (local_declarations)

    local_declarations  go to state 34


State 31

   13 func_declaration: type_specifier id @1 LPAREN params RPAREN compound_stmt •

    $default  reduce using rule 13 (func_declaration)


State 32

   16 param_list: param_list COMMA param •

    $default  reduce using rule 16 (param_list)


State 33

   19 param: type_specifier id LBRACE RBRACE •

    $default  reduce using rule 19 (param)


State 34

   20 compound_stmt: LCURLY local_declarations • statement_list RCURLY
   21 local_declarations: local_declarations • var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 24 (statement_list)

    var_declaration  go to state 35
    type_specifier   go to state 36
    statement_list   go to state 37


State 35

   21 local_declarations: local_declarations var_declaration •

    $default  reduce using rule 21 (local_declarations)


State 36

    8 var_declaration: type_specifier • id SEMI
    9                | type_specifier • id LBRACE num RBRACE SEMI

    ID  shift, and go to state 11

    id  go to state 38


State 37

   20 compound_stmt: LCURLY local_declarations statement_list • RCURLY
   23 statement_list: statement_list • statement

    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42
    LCURLY  shift, and go to state 30
    RCURLY  shift, and go to state 43
    SEMI    shift, and go to state 44

    id                   go to state 45
    num                  go to state 46
    compound_stmt        go to state 47
    statement            go to state 48
    expression_stmt      go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    selection_stmt       go to state 58
    iteration_stmt       go to state 59


State 38

    8 var_declaration: type_specifier id • SEMI
    9                | type_specifier id • LBRACE num RBRACE SEMI

    LBRACE  shift, and go to state 13
    SEMI    shift, and go to state 14


State 39

   67 selection_stmt: IF • LPAREN expression RPAREN statement
   68               | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 60


State 40

   69 iteration_stmt: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 61


State 41

   32 return_stmt: RETURN • SEMI
   33            | RETURN • expression SEMI

    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42
    SEMI    shift, and go to state 62

    id                   go to state 45
    num                  go to state 46
    expression           go to state 63
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 42

   57 factor: LPAREN • expression RPAREN

    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42

    id                   go to state 45
    num                  go to state 46
    expression           go to state 64
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 43

   20 compound_stmt: LCURLY local_declarations statement_list RCURLY •

    $default  reduce using rule 20 (compound_stmt)


State 44

   31 expression_stmt: SEMI •

    $default  reduce using rule 31 (expression_stmt)


State 45

   36 var: id •
   38    | id • LBRACE @2 expression RBRACE
   62 call: id • @5 LPAREN args RPAREN

    LBRACE  shift, and go to state 65

    LPAREN    reduce using rule 61 (@5)
    $default  reduce using rule 36 (var)

    @5  go to state 66


State 46

   60 factor: num •

    $default  reduce using rule 60 (factor)


State 47

   26 statement: compound_stmt •

    $default  reduce using rule 26 (statement)


State 48

   23 statement_list: statement_list statement •

    $default  reduce using rule 23 (statement_list)


State 49

   25 statement: expression_stmt •

    $default  reduce using rule 25 (statement)


State 50

   29 statement: return_stmt •

    $default  reduce using rule 29 (statement)


State 51

   30 expression_stmt: expression • SEMI

    SEMI  shift, and go to state 67


State 52

   34 expression: var • ASSIGN expression
   58 factor: var •

    ASSIGN  shift, and go to state 68

    $default  reduce using rule 58 (factor)


State 53

   35 expression: simple_expression •

    $default  reduce using rule 35 (expression)


State 54

   39 simple_expression: additive_expression • relop additive_expression
   40                  | additive_expression •
   48 additive_expression: additive_expression • addop @3 term

    EQ     shift, and go to state 69
    NE     shift, and go to state 70
    LT     shift, and go to state 71
    LE     shift, and go to state 72
    GT     shift, and go to state 73
    GE     shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 40 (simple_expression)

    relop  go to state 77
    addop  go to state 78


State 55

   49 additive_expression: term •
   53 term: term • mulop @4 factor

    TIMES  shift, and go to state 79
    OVER   shift, and go to state 80

    $default  reduce using rule 49 (additive_expression)

    mulop  go to state 81


State 56

   54 term: factor •

    $default  reduce using rule 54 (term)


State 57

   59 factor: call •

    $default  reduce using rule 59 (factor)


State 58

   27 statement: selection_stmt •

    $default  reduce using rule 27 (statement)


State 59

   28 statement: iteration_stmt •

    $default  reduce using rule 28 (statement)


State 60

   67 selection_stmt: IF LPAREN • expression RPAREN statement
   68               | IF LPAREN • expression RPAREN statement ELSE statement

    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42

    id                   go to state 45
    num                  go to state 46
    expression           go to state 82
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 61

   69 iteration_stmt: WHILE LPAREN • expression RPAREN statement

    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42

    id                   go to state 45
    num                  go to state 46
    expression           go to state 83
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 62

   32 return_stmt: RETURN SEMI •

    $default  reduce using rule 32 (return_stmt)


State 63

   33 return_stmt: RETURN expression • SEMI

    SEMI  shift, and go to state 84


State 64

   57 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 85


State 65

   38 var: id LBRACE • @2 expression RBRACE

    $default  reduce using rule 37 (@2)

    @2  go to state 86


State 66

   62 call: id @5 • LPAREN args RPAREN

    LPAREN  shift, and go to state 87


State 67

   30 expression_stmt: expression SEMI •

    $default  reduce using rule 30 (expression_stmt)


State 68

   34 expression: var ASSIGN • expression

    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42

    id                   go to state 45
    num                  go to state 46
    expression           go to state 88
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 69

   46 relop: EQ •

    $default  reduce using rule 46 (relop)


State 70

   45 relop: NE •

    $default  reduce using rule 45 (relop)


State 71

   42 relop: LT •

    $default  reduce using rule 42 (relop)


State 72

   41 relop: LE •

    $default  reduce using rule 41 (relop)


State 73

   43 relop: GT •

    $default  reduce using rule 43 (relop)


State 74

   44 relop: GE •

    $default  reduce using rule 44 (relop)


State 75

   50 addop: PLUS •

    $default  reduce using rule 50 (addop)


State 76

   51 addop: MINUS •

    $default  reduce using rule 51 (addop)


State 77

   39 simple_expression: additive_expression relop • additive_expression

    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42

    id                   go to state 45
    num                  go to state 46
    var                  go to state 89
    additive_expression  go to state 90
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 78

   48 additive_expression: additive_expression addop • @3 term

    $default  reduce using rule 47 (@3)

    @3  go to state 91


State 79

   55 mulop: TIMES •

    $default  reduce using rule 55 (mulop)


State 80

   56 mulop: OVER •

    $default  reduce using rule 56 (mulop)


State 81

   53 term: term mulop • @4 factor

    $default  reduce using rule 52 (@4)

    @4  go to state 92


State 82

   67 selection_stmt: IF LPAREN expression • RPAREN statement
   68               | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 93


State 83

   69 iteration_stmt: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 94


State 84

   33 return_stmt: RETURN expression SEMI •

    $default  reduce using rule 33 (return_stmt)


State 85

   57 factor: LPAREN expression RPAREN •

    $default  reduce using rule 57 (factor)


State 86

   38 var: id LBRACE @2 • expression RBRACE

    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42

    id                   go to state 45
    num                  go to state 46
    expression           go to state 95
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 87

   62 call: id @5 LPAREN • args RPAREN

    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42

    $default  reduce using rule 64 (args)

    id                   go to state 45
    num                  go to state 46
    expression           go to state 96
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    args                 go to state 97
    arg_list             go to state 98


State 88

   34 expression: var ASSIGN expression •

    $default  reduce using rule 34 (expression)


State 89

   58 factor: var •

    $default  reduce using rule 58 (factor)


State 90

   39 simple_expression: additive_expression relop additive_expression •
   48 additive_expression: additive_expression • addop @3 term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 39 (simple_expression)

    addop  go to state 78


State 91

   48 additive_expression: additive_expression addop @3 • term

    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42

    id      go to state 45
    num     go to state 46
    var     go to state 89
    term    go to state 99
    factor  go to state 56
    call    go to state 57


State 92

   53 term: term mulop @4 • factor

    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42

    id      go to state 45
    num     go to state 46
    var     go to state 89
    factor  go to state 100
    call    go to state 57


State 93

   67 selection_stmt: IF LPAREN expression RPAREN • statement
   68               | IF LPAREN expression RPAREN • statement ELSE statement

    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42
    LCURLY  shift, and go to state 30
    SEMI    shift, and go to state 44

    id                   go to state 45
    num                  go to state 46
    compound_stmt        go to state 47
    statement            go to state 101
    expression_stmt      go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    selection_stmt       go to state 58
    iteration_stmt       go to state 59


State 94

   69 iteration_stmt: WHILE LPAREN expression RPAREN • statement

    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42
    LCURLY  shift, and go to state 30
    SEMI    shift, and go to state 44

    id                   go to state 45
    num                  go to state 46
    compound_stmt        go to state 47
    statement            go to state 102
    expression_stmt      go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    selection_stmt       go to state 58
    iteration_stmt       go to state 59


State 95

   38 var: id LBRACE @2 expression • RBRACE

    RBRACE  shift, and go to state 103


State 96

   66 arg_list: expression •

    $default  reduce using rule 66 (arg_list)


State 97

   62 call: id @5 LPAREN args • RPAREN

    RPAREN  shift, and go to state 104


State 98

   63 args: arg_list •
   65 arg_list: arg_list • COMMA expression

    COMMA  shift, and go to state 105

    $default  reduce using rule 63 (args)


State 99

   48 additive_expression: additive_expression addop @3 term •
   53 term: term • mulop @4 factor

    TIMES  shift, and go to state 79
    OVER   shift, and go to state 80

    $default  reduce using rule 48 (additive_expression)

    mulop  go to state 81


State 100

   53 term: term mulop @4 factor •

    $default  reduce using rule 53 (term)


State 101

   67 selection_stmt: IF LPAREN expression RPAREN statement •
   68               | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 106

    $default  reduce using rule 67 (selection_stmt)


State 102

   69 iteration_stmt: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 69 (iteration_stmt)


State 103

   38 var: id LBRACE @2 expression RBRACE •

    $default  reduce using rule 38 (var)


State 104

   62 call: id @5 LPAREN args RPAREN •

    $default  reduce using rule 62 (call)


State 105

   65 arg_list: arg_list COMMA • expression

    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42

    id                   go to state 45
    num                  go to state 46
    expression           go to state 107
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 106

   68 selection_stmt: IF LPAREN expression RPAREN statement ELSE • statement

    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    NUM     shift, and go to state 16
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 42
    LCURLY  shift, and go to state 30
    SEMI    shift, and go to state 44

    id                   go to state 45
    num                  go to state 46
    compound_stmt        go to state 47
    statement            go to state 108
    expression_stmt      go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    selection_stmt       go to state 58
    iteration_stmt       go to state 59


State 107

   65 arg_list: arg_list COMMA expression •

    $default  reduce using rule 65 (arg_list)


State 108

   68 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 68 (selection_stmt)

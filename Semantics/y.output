Terminals unused in grammar

    INTARRAY
    VOIDARRAY
    ENDFILE
    ERROR


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | func_declaration

    6 id: ID

    7 num: NUM

    8 var_declaration: type_specifier id SEMI

    9 $@1: ε

   10 var_declaration: type_specifier id $@1 LBRACE num RBRACE SEMI

   11 type_specifier: INT
   12               | VOID

   13 @2: ε

   14 func_declaration: type_specifier id @2 LPAREN params RPAREN compound_stmt

   15 params: param_list
   16       | VOID

   17 param_list: param_list COMMA param
   18           | param

   19 param: type_specifier id
   20      | type_specifier id LBRACE RBRACE

   21 compound_stmt: LCURLY local_declarations statement_list RCURLY

   22 local_declarations: local_declarations var_declaration
   23                   | ε

   24 statement_list: statement_list statement
   25               | ε

   26 statement: expression_stmt
   27          | compound_stmt
   28          | selection_stmt
   29          | iteration_stmt
   30          | return_stmt

   31 expression_stmt: expression SEMI
   32                | SEMI

   33 return_stmt: RETURN SEMI
   34            | RETURN expression SEMI

   35 expression: var ASSIGN expression
   36           | simple_expression

   37 var: id

   38 @3: ε

   39 var: id LBRACE @3 expression RBRACE

   40 simple_expression: additive_expression relop additive_expression
   41                  | additive_expression

   42 relop: LE
   43      | LT
   44      | GT
   45      | GE
   46      | NE
   47      | EQ

   48 @4: ε

   49 additive_expression: additive_expression addop @4 term
   50                    | term

   51 addop: PLUS
   52      | MINUS

   53 @5: ε

   54 term: term mulop @5 factor
   55     | factor

   56 mulop: TIMES
   57      | OVER

   58 factor: LPAREN expression RPAREN
   59       | var
   60       | call
   61       | num

   62 @6: ε

   63 call: id @6 LPAREN args RPAREN

   64 args: arg_list
   65     | ε

   66 arg_list: arg_list COMMA expression
   67         | expression

   68 selection_stmt: IF LPAREN expression RPAREN statement
   69               | IF LPAREN expression RPAREN statement ELSE statement

   70 iteration_stmt: WHILE LPAREN expression RPAREN statement


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 68 69
    WHILE (259) 70
    RETURN (260) 33 34
    INT (261) 11
    VOID (262) 12 16
    INTARRAY (263)
    VOIDARRAY (264)
    NUM (265) 7
    ID (266) 6
    ENDFILE (267)
    ERROR (268)
    EQ (269) 47
    NE (270) 46
    LT (271) 43
    LE (272) 42
    GT (273) 44
    GE (274) 45
    LPAREN (275) 14 58 63 68 69 70
    RPAREN (276) 14 58 63 68 69 70
    LBRACE (277) 10 20 39
    RBRACE (278) 10 20 39
    LCURLY (279) 21
    RCURLY (280) 21
    SEMI (281) 8 10 31 32 33 34
    COMMA (282) 17 66
    IFONLY (283)
    PARAMONLY (284)
    ELSE (285) 69
    PLUS (286) 51
    MINUS (287) 52
    TIMES (288) 56
    OVER (289) 57
    ASSIGN (290) 35


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program (37)
        on left: 1
        on right: 0
    declaration_list (38)
        on left: 2 3
        on right: 1 2
    declaration (39)
        on left: 4 5
        on right: 2 3
    id (40)
        on left: 6
        on right: 8 10 14 19 20 37 39 63
    num (41)
        on left: 7
        on right: 10 61
    var_declaration (42)
        on left: 8 10
        on right: 4 22
    $@1 (43)
        on left: 9
        on right: 10
    type_specifier (44)
        on left: 11 12
        on right: 8 10 14 19 20
    func_declaration (45)
        on left: 14
        on right: 5
    @2 (46)
        on left: 13
        on right: 14
    params (47)
        on left: 15 16
        on right: 14
    param_list (48)
        on left: 17 18
        on right: 15 17
    param (49)
        on left: 19 20
        on right: 17 18
    compound_stmt (50)
        on left: 21
        on right: 14 27
    local_declarations (51)
        on left: 22 23
        on right: 21 22
    statement_list (52)
        on left: 24 25
        on right: 21 24
    statement (53)
        on left: 26 27 28 29 30
        on right: 24 68 69 70
    expression_stmt (54)
        on left: 31 32
        on right: 26
    return_stmt (55)
        on left: 33 34
        on right: 30
    expression (56)
        on left: 35 36
        on right: 31 34 35 39 58 66 67 68 69 70
    var (57)
        on left: 37 39
        on right: 35 59
    @3 (58)
        on left: 38
        on right: 39
    simple_expression (59)
        on left: 40 41
        on right: 36
    relop (60)
        on left: 42 43 44 45 46 47
        on right: 40
    additive_expression (61)
        on left: 49 50
        on right: 40 41 49
    @4 (62)
        on left: 48
        on right: 49
    addop (63)
        on left: 51 52
        on right: 49
    term (64)
        on left: 54 55
        on right: 49 50 54
    @5 (65)
        on left: 53
        on right: 54
    mulop (66)
        on left: 56 57
        on right: 54
    factor (67)
        on left: 58 59 60 61
        on right: 54 55
    call (68)
        on left: 63
        on right: 60
    @6 (69)
        on left: 62
        on right: 63
    args (70)
        on left: 64 65
        on right: 63
    arg_list (71)
        on left: 66 67
        on right: 64 66
    selection_stmt (72)
        on left: 68 69
        on right: 28
    iteration_stmt (73)
        on left: 70
        on right: 29


State 0

    0 $accept: • program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    func_declaration  go to state 8


State 1

   11 type_specifier: INT •

    $default  reduce using rule 11 (type_specifier)


State 2

   12 type_specifier: VOID •

    $default  reduce using rule 12 (type_specifier)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list •
    2 declaration_list: declaration_list • declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration       go to state 10
    var_declaration   go to state 6
    type_specifier    go to state 7
    func_declaration  go to state 8


State 5

    3 declaration_list: declaration •

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration •

    $default  reduce using rule 4 (declaration)


State 7

    8 var_declaration: type_specifier • id SEMI
   10                | type_specifier • id $@1 LBRACE num RBRACE SEMI
   14 func_declaration: type_specifier • id @2 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11

    id  go to state 12


State 8

    5 declaration: func_declaration •

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 declaration_list: declaration_list declaration •

    $default  reduce using rule 2 (declaration_list)


State 11

    6 id: ID •

    $default  reduce using rule 6 (id)


State 12

    8 var_declaration: type_specifier id • SEMI
   10                | type_specifier id • $@1 LBRACE num RBRACE SEMI
   14 func_declaration: type_specifier id • @2 LPAREN params RPAREN compound_stmt

    SEMI  shift, and go to state 13

    LPAREN    reduce using rule 13 (@2)
    $default  reduce using rule 9 ($@1)

    $@1  go to state 14
    @2   go to state 15


State 13

    8 var_declaration: type_specifier id SEMI •

    $default  reduce using rule 8 (var_declaration)


State 14

   10 var_declaration: type_specifier id $@1 • LBRACE num RBRACE SEMI

    LBRACE  shift, and go to state 16


State 15

   14 func_declaration: type_specifier id @2 • LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 17


State 16

   10 var_declaration: type_specifier id $@1 LBRACE • num RBRACE SEMI

    NUM  shift, and go to state 18

    num  go to state 19


State 17

   14 func_declaration: type_specifier id @2 LPAREN • params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 20

    type_specifier  go to state 21
    params          go to state 22
    param_list      go to state 23
    param           go to state 24


State 18

    7 num: NUM •

    $default  reduce using rule 7 (num)


State 19

   10 var_declaration: type_specifier id $@1 LBRACE num • RBRACE SEMI

    RBRACE  shift, and go to state 25


State 20

   12 type_specifier: VOID •
   16 params: VOID •

    RPAREN    reduce using rule 16 (params)
    $default  reduce using rule 12 (type_specifier)


State 21

   19 param: type_specifier • id
   20      | type_specifier • id LBRACE RBRACE

    ID  shift, and go to state 11

    id  go to state 26


State 22

   14 func_declaration: type_specifier id @2 LPAREN params • RPAREN compound_stmt

    RPAREN  shift, and go to state 27


State 23

   15 params: param_list •
   17 param_list: param_list • COMMA param

    COMMA  shift, and go to state 28

    $default  reduce using rule 15 (params)


State 24

   18 param_list: param •

    $default  reduce using rule 18 (param_list)


State 25

   10 var_declaration: type_specifier id $@1 LBRACE num RBRACE • SEMI

    SEMI  shift, and go to state 29


State 26

   19 param: type_specifier id •
   20      | type_specifier id • LBRACE RBRACE

    LBRACE  shift, and go to state 30

    $default  reduce using rule 19 (param)


State 27

   14 func_declaration: type_specifier id @2 LPAREN params RPAREN • compound_stmt

    LCURLY  shift, and go to state 31

    compound_stmt  go to state 32


State 28

   17 param_list: param_list COMMA • param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 21
    param           go to state 33


State 29

   10 var_declaration: type_specifier id $@1 LBRACE num RBRACE SEMI •

    $default  reduce using rule 10 (var_declaration)


State 30

   20 param: type_specifier id LBRACE • RBRACE

    RBRACE  shift, and go to state 34


State 31

   21 compound_stmt: LCURLY • local_declarations statement_list RCURLY

    $default  reduce using rule 23 (local_declarations)

    local_declarations  go to state 35


State 32

   14 func_declaration: type_specifier id @2 LPAREN params RPAREN compound_stmt •

    $default  reduce using rule 14 (func_declaration)


State 33

   17 param_list: param_list COMMA param •

    $default  reduce using rule 17 (param_list)


State 34

   20 param: type_specifier id LBRACE RBRACE •

    $default  reduce using rule 20 (param)


State 35

   21 compound_stmt: LCURLY local_declarations • statement_list RCURLY
   22 local_declarations: local_declarations • var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 25 (statement_list)

    var_declaration  go to state 36
    type_specifier   go to state 37
    statement_list   go to state 38


State 36

   22 local_declarations: local_declarations var_declaration •

    $default  reduce using rule 22 (local_declarations)


State 37

    8 var_declaration: type_specifier • id SEMI
   10                | type_specifier • id $@1 LBRACE num RBRACE SEMI

    ID  shift, and go to state 11

    id  go to state 39


State 38

   21 compound_stmt: LCURLY local_declarations statement_list • RCURLY
   24 statement_list: statement_list • statement

    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    RETURN  shift, and go to state 42
    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 31
    RCURLY  shift, and go to state 44
    SEMI    shift, and go to state 45

    id                   go to state 46
    num                  go to state 47
    compound_stmt        go to state 48
    statement            go to state 49
    expression_stmt      go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58
    selection_stmt       go to state 59
    iteration_stmt       go to state 60


State 39

    8 var_declaration: type_specifier id • SEMI
   10                | type_specifier id • $@1 LBRACE num RBRACE SEMI

    SEMI  shift, and go to state 13

    $default  reduce using rule 9 ($@1)

    $@1  go to state 14


State 40

   68 selection_stmt: IF • LPAREN expression RPAREN statement
   69               | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 61


State 41

   70 iteration_stmt: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 62


State 42

   33 return_stmt: RETURN • SEMI
   34            | RETURN • expression SEMI

    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43
    SEMI    shift, and go to state 63

    id                   go to state 46
    num                  go to state 47
    expression           go to state 64
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 43

   58 factor: LPAREN • expression RPAREN

    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43

    id                   go to state 46
    num                  go to state 47
    expression           go to state 65
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 44

   21 compound_stmt: LCURLY local_declarations statement_list RCURLY •

    $default  reduce using rule 21 (compound_stmt)


State 45

   32 expression_stmt: SEMI •

    $default  reduce using rule 32 (expression_stmt)


State 46

   37 var: id •
   39    | id • LBRACE @3 expression RBRACE
   63 call: id • @6 LPAREN args RPAREN

    LBRACE  shift, and go to state 66

    LPAREN    reduce using rule 62 (@6)
    $default  reduce using rule 37 (var)

    @6  go to state 67


State 47

   61 factor: num •

    $default  reduce using rule 61 (factor)


State 48

   27 statement: compound_stmt •

    $default  reduce using rule 27 (statement)


State 49

   24 statement_list: statement_list statement •

    $default  reduce using rule 24 (statement_list)


State 50

   26 statement: expression_stmt •

    $default  reduce using rule 26 (statement)


State 51

   30 statement: return_stmt •

    $default  reduce using rule 30 (statement)


State 52

   31 expression_stmt: expression • SEMI

    SEMI  shift, and go to state 68


State 53

   35 expression: var • ASSIGN expression
   59 factor: var •

    ASSIGN  shift, and go to state 69

    $default  reduce using rule 59 (factor)


State 54

   36 expression: simple_expression •

    $default  reduce using rule 36 (expression)


State 55

   40 simple_expression: additive_expression • relop additive_expression
   41                  | additive_expression •
   49 additive_expression: additive_expression • addop @4 term

    EQ     shift, and go to state 70
    NE     shift, and go to state 71
    LT     shift, and go to state 72
    LE     shift, and go to state 73
    GT     shift, and go to state 74
    GE     shift, and go to state 75
    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 41 (simple_expression)

    relop  go to state 78
    addop  go to state 79


State 56

   50 additive_expression: term •
   54 term: term • mulop @5 factor

    TIMES  shift, and go to state 80
    OVER   shift, and go to state 81

    $default  reduce using rule 50 (additive_expression)

    mulop  go to state 82


State 57

   55 term: factor •

    $default  reduce using rule 55 (term)


State 58

   60 factor: call •

    $default  reduce using rule 60 (factor)


State 59

   28 statement: selection_stmt •

    $default  reduce using rule 28 (statement)


State 60

   29 statement: iteration_stmt •

    $default  reduce using rule 29 (statement)


State 61

   68 selection_stmt: IF LPAREN • expression RPAREN statement
   69               | IF LPAREN • expression RPAREN statement ELSE statement

    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43

    id                   go to state 46
    num                  go to state 47
    expression           go to state 83
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 62

   70 iteration_stmt: WHILE LPAREN • expression RPAREN statement

    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43

    id                   go to state 46
    num                  go to state 47
    expression           go to state 84
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 63

   33 return_stmt: RETURN SEMI •

    $default  reduce using rule 33 (return_stmt)


State 64

   34 return_stmt: RETURN expression • SEMI

    SEMI  shift, and go to state 85


State 65

   58 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 86


State 66

   39 var: id LBRACE • @3 expression RBRACE

    $default  reduce using rule 38 (@3)

    @3  go to state 87


State 67

   63 call: id @6 • LPAREN args RPAREN

    LPAREN  shift, and go to state 88


State 68

   31 expression_stmt: expression SEMI •

    $default  reduce using rule 31 (expression_stmt)


State 69

   35 expression: var ASSIGN • expression

    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43

    id                   go to state 46
    num                  go to state 47
    expression           go to state 89
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 70

   47 relop: EQ •

    $default  reduce using rule 47 (relop)


State 71

   46 relop: NE •

    $default  reduce using rule 46 (relop)


State 72

   43 relop: LT •

    $default  reduce using rule 43 (relop)


State 73

   42 relop: LE •

    $default  reduce using rule 42 (relop)


State 74

   44 relop: GT •

    $default  reduce using rule 44 (relop)


State 75

   45 relop: GE •

    $default  reduce using rule 45 (relop)


State 76

   51 addop: PLUS •

    $default  reduce using rule 51 (addop)


State 77

   52 addop: MINUS •

    $default  reduce using rule 52 (addop)


State 78

   40 simple_expression: additive_expression relop • additive_expression

    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43

    id                   go to state 46
    num                  go to state 47
    var                  go to state 90
    additive_expression  go to state 91
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 79

   49 additive_expression: additive_expression addop • @4 term

    $default  reduce using rule 48 (@4)

    @4  go to state 92


State 80

   56 mulop: TIMES •

    $default  reduce using rule 56 (mulop)


State 81

   57 mulop: OVER •

    $default  reduce using rule 57 (mulop)


State 82

   54 term: term mulop • @5 factor

    $default  reduce using rule 53 (@5)

    @5  go to state 93


State 83

   68 selection_stmt: IF LPAREN expression • RPAREN statement
   69               | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 94


State 84

   70 iteration_stmt: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 95


State 85

   34 return_stmt: RETURN expression SEMI •

    $default  reduce using rule 34 (return_stmt)


State 86

   58 factor: LPAREN expression RPAREN •

    $default  reduce using rule 58 (factor)


State 87

   39 var: id LBRACE @3 • expression RBRACE

    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43

    id                   go to state 46
    num                  go to state 47
    expression           go to state 96
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 88

   63 call: id @6 LPAREN • args RPAREN

    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43

    $default  reduce using rule 65 (args)

    id                   go to state 46
    num                  go to state 47
    expression           go to state 97
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58
    args                 go to state 98
    arg_list             go to state 99


State 89

   35 expression: var ASSIGN expression •

    $default  reduce using rule 35 (expression)


State 90

   59 factor: var •

    $default  reduce using rule 59 (factor)


State 91

   40 simple_expression: additive_expression relop additive_expression •
   49 additive_expression: additive_expression • addop @4 term

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 40 (simple_expression)

    addop  go to state 79


State 92

   49 additive_expression: additive_expression addop @4 • term

    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43

    id      go to state 46
    num     go to state 47
    var     go to state 90
    term    go to state 100
    factor  go to state 57
    call    go to state 58


State 93

   54 term: term mulop @5 • factor

    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43

    id      go to state 46
    num     go to state 47
    var     go to state 90
    factor  go to state 101
    call    go to state 58


State 94

   68 selection_stmt: IF LPAREN expression RPAREN • statement
   69               | IF LPAREN expression RPAREN • statement ELSE statement

    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    RETURN  shift, and go to state 42
    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 31
    SEMI    shift, and go to state 45

    id                   go to state 46
    num                  go to state 47
    compound_stmt        go to state 48
    statement            go to state 102
    expression_stmt      go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58
    selection_stmt       go to state 59
    iteration_stmt       go to state 60


State 95

   70 iteration_stmt: WHILE LPAREN expression RPAREN • statement

    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    RETURN  shift, and go to state 42
    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 31
    SEMI    shift, and go to state 45

    id                   go to state 46
    num                  go to state 47
    compound_stmt        go to state 48
    statement            go to state 103
    expression_stmt      go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58
    selection_stmt       go to state 59
    iteration_stmt       go to state 60


State 96

   39 var: id LBRACE @3 expression • RBRACE

    RBRACE  shift, and go to state 104


State 97

   67 arg_list: expression •

    $default  reduce using rule 67 (arg_list)


State 98

   63 call: id @6 LPAREN args • RPAREN

    RPAREN  shift, and go to state 105


State 99

   64 args: arg_list •
   66 arg_list: arg_list • COMMA expression

    COMMA  shift, and go to state 106

    $default  reduce using rule 64 (args)


State 100

   49 additive_expression: additive_expression addop @4 term •
   54 term: term • mulop @5 factor

    TIMES  shift, and go to state 80
    OVER   shift, and go to state 81

    $default  reduce using rule 49 (additive_expression)

    mulop  go to state 82


State 101

   54 term: term mulop @5 factor •

    $default  reduce using rule 54 (term)


State 102

   68 selection_stmt: IF LPAREN expression RPAREN statement •
   69               | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 107

    $default  reduce using rule 68 (selection_stmt)


State 103

   70 iteration_stmt: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 70 (iteration_stmt)


State 104

   39 var: id LBRACE @3 expression RBRACE •

    $default  reduce using rule 39 (var)


State 105

   63 call: id @6 LPAREN args RPAREN •

    $default  reduce using rule 63 (call)


State 106

   66 arg_list: arg_list COMMA • expression

    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43

    id                   go to state 46
    num                  go to state 47
    expression           go to state 108
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 107

   69 selection_stmt: IF LPAREN expression RPAREN statement ELSE • statement

    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    RETURN  shift, and go to state 42
    NUM     shift, and go to state 18
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 31
    SEMI    shift, and go to state 45

    id                   go to state 46
    num                  go to state 47
    compound_stmt        go to state 48
    statement            go to state 109
    expression_stmt      go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58
    selection_stmt       go to state 59
    iteration_stmt       go to state 60


State 108

   66 arg_list: arg_list COMMA expression •

    $default  reduce using rule 66 (arg_list)


State 109

   69 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 69 (selection_stmt)
